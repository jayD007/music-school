{"version":3,"file":"static/js/446.37f77bb5.chunk.js","mappings":"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","sources":["pages/contact/Contact.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Container,\n  IconButton,\n  Modal,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport Header from '../../components/header/Header';\nimport './style/contact.css';\nimport { email, emailSubject } from '../../utils';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\n\ninterface FormData {\n  voornaam: string;\n  achternaam: string;\n  leeftijd: number | '';\n  email: string;\n  telefoon: string;\n  vraag: string;\n}\n\nconst Contact = () => {\n  const [formData, setFormData] = useState<FormData>({\n    voornaam: '',\n    achternaam: '',\n    leeftijd: '',\n    email: '',\n    telefoon: '',\n    vraag: '',\n  });\n\n  const [errors, setErrors] = useState<Partial<FormData>>({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [copyStatus, setCopyStatus] = useState(false);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const validate = () => {\n    let errorMessages: { [key: string]: string } = {};\n\n    if (!formData.voornaam) errorMessages.voornaam = 'Voornaam is verplicht';\n    if (!formData.achternaam)\n      errorMessages.achternaam = 'Achternaam is verplicht';\n    if (!formData.leeftijd || formData.leeftijd < 3 || formData.leeftijd > 100)\n      errorMessages.leeftijd =\n        'Leeftijd is verplicht en moet tussen 3 jaar en 100 jaar zijn';\n    if (!formData.email) errorMessages.email = 'Email is verplicht';\n    if (!formData.telefoon)\n      errorMessages.telefoon = 'Telefoon nummer is verplicht';\n    if (!formData.vraag) errorMessages.vraag = 'Vraag is verplicht';\n\n    setErrors(errorMessages);\n    return Object.keys(errorMessages).length === 0;\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (validate()) {\n      const emailBody = `\n      Voornaam: ${formData.voornaam}\n      Achternaam: ${formData.achternaam}\n      Leeftijd: ${formData.leeftijd}\n      Email: ${formData.email}\n      Telefoon: ${formData.telefoon}\n      Vraag: ${formData.vraag}\n    `;\n      window.location.href = `mailto:${email}?subject=${emailSubject}: ${formData.voornaam}&body=${encodeURIComponent(emailBody)}`;\n      setModalOpen(true);\n    }\n  };\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(email).then(() => {\n      setCopyStatus(true);\n      setTimeout(() => {\n        setCopyStatus(false);\n      }, 3000);\n    });\n  };\n\n  const handleClose = () => {\n    setModalOpen(false);\n    setFormData({\n      voornaam: '',\n      achternaam: '',\n      leeftijd: '',\n      email: '',\n      telefoon: '',\n      vraag: '',\n    });\n  };\n\n  return (\n    <Container maxWidth=\"sm\" id=\"contact\">\n      <Header text=\"Contact\" />\n      <form onSubmit={handleSubmit}>\n        <TextField\n          label=\"voornaam\"\n          name=\"voornaam\"\n          value={formData.voornaam}\n          onChange={handleChange}\n          error={!!errors.voornaam}\n          helperText={errors.voornaam}\n          fullWidth\n          margin=\"normal\"\n        />\n        <TextField\n          label=\"achternaam\"\n          name=\"achternaam\"\n          value={formData.achternaam}\n          onChange={handleChange}\n          error={!!errors.achternaam}\n          helperText={errors.achternaam}\n          fullWidth\n          margin=\"normal\"\n        />\n        <TextField\n          label=\"leeftijd\"\n          name=\"leeftijd\"\n          type=\"number\"\n          value={formData.leeftijd}\n          onChange={handleChange}\n          error={!!errors.leeftijd}\n          helperText={errors.leeftijd}\n          fullWidth\n          margin=\"normal\"\n          inputProps={{ inputMode: 'numeric', pattern: '\\\\d*' }}\n          onInput={(e) => {\n            const input = e.target as HTMLInputElement;\n            input.value = input.value.replace(/[^0-9]/g, '');\n          }}\n        />\n        <TextField\n          label=\"email\"\n          name=\"email\"\n          type=\"email\"\n          value={formData.email}\n          onChange={handleChange}\n          error={!!errors.email}\n          helperText={errors.email}\n          fullWidth\n          margin=\"normal\"\n        />\n        <TextField\n          label=\"telefoon\"\n          name=\"telefoon\"\n          value={formData.telefoon}\n          onChange={handleChange}\n          error={!!errors.telefoon}\n          helperText={errors.telefoon}\n          fullWidth\n          margin=\"normal\"\n          inputProps={{ inputMode: 'numeric', pattern: '\\\\d*' }}\n          onInput={(e) => {\n            const input = e.target as HTMLInputElement;\n            input.value = input.value.replace(/[^0-9]/g, '');\n          }}\n        />\n        <TextField\n          label=\"vraag\"\n          name=\"vraag\"\n          value={formData.vraag}\n          onChange={handleChange}\n          error={!!errors.vraag}\n          helperText={errors.vraag}\n          fullWidth\n          margin=\"normal\"\n          multiline={true}\n          rows={4}\n        />\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Stuur\n        </Button>\n      </form>\n      <Modal open={modalOpen} onClose={() => handleClose}>\n        <Box\n          sx={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 400,\n            bgcolor: 'background.paper',\n            boxShadow: 24,\n            p: 4,\n          }}\n        >\n          <Typography variant=\"h6\" component=\"h2\">\n            Thank you\n          </Typography>\n          <Typography sx={{ mt: 2 }}>\n            De e-mailapplicatie moet op uw apparaat zijn geopend. Als dit niet\n            het geval is, stuur dan uw e-mail naar dit adres:&nbsp;\n            {email}\n            <span>\n              <IconButton color=\"primary\" onClick={handleCopy} sx={{ ml: 2 }}>\n                <ContentCopyIcon />\n              </IconButton>\n            </span>\n          </Typography>\n          {copyStatus && (\n            <Box sx={{ display: 'flex', alignItems: 'center', mt: 2 }}>\n              <CheckCircleIcon color=\"success\" />\n              <Typography sx={{ ml: 1 }}>Copied</Typography>\n            </Box>\n          )}\n        </Box>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default Contact;\n"],"names":["Contact","formData","setFormData","useState","voornaam","achternaam","leeftijd","email","telefoon","vraag","errors","setErrors","modalOpen","setModalOpen","copyStatus","setCopyStatus","handleChange","e","target","name","value","handleClose","_jsxs","Container","maxWidth","id","children","_jsx","Header","text","onSubmit","preventDefault","validate","errorMessages","Object","keys","length","emailBody","concat","window","location","href","emailSubject","encodeURIComponent","TextField","label","onChange","error","helperText","fullWidth","margin","type","inputProps","inputMode","pattern","onInput","input","replace","multiline","rows","Button","variant","color","Modal","open","onClose","Box","sx","position","top","left","transform","width","bgcolor","boxShadow","p","Typography","component","mt","IconButton","onClick","handleCopy","navigator","clipboard","writeText","then","setTimeout","ml","ContentCopyIcon","display","alignItems","CheckCircleIcon"],"sourceRoot":""}