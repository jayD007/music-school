{"version":3,"file":"static/js/446.487cdac3.chunk.js","mappings":"6PAiBA,MAgGA,EAhGgBA,KACd,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAmB,CACjDC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,IAAK,GACLC,MAAO,GACPC,MAAO,KAGHC,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BZ,EAAY,IAAKD,EAAU,CAACW,GAAyBC,GAAQ,GAGxDE,EAAMC,IAAWb,EAAAA,EAAAA,WAAS,GAC3Bc,GAAWC,EAAAA,EAAAA,MAaXC,EAAcA,KAClBH,GAAQ,GACRC,EAAS,IAAI,EAGf,OACEG,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,SAAS,KAAKC,GAAG,UAASC,SAAA,EACnCC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,KAAK,aACbF,EAAAA,EAAAA,KAAA,QAAMG,SAnBYjB,IACpBA,EAAEkB,iBACEC,SAAS7B,EAASM,KAAO,IAC3BwB,MAAM,oCAGRC,OAAOC,SAASC,KAAI,sEAAAC,OAAyEC,mBAAmB,eAADD,OAC9FlC,EAASG,UAAS,iBAAA+B,OAAgBlC,EAASI,SAAQ,WAAA8B,OAAUlC,EAASM,IAAG,aAAA4B,OAAYlC,EAASO,MAAK,aAAA2B,OAAYlC,EAASQ,MAAK,gBAAA0B,OAAelC,EAASK,WACnK,EAW4BkB,UAC3BJ,EAAAA,EAAAA,MAACiB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEf,SAAA,CAEvB,CACE,YACA,aACA,WACA,MACA,QACA,QACA,YAEFgB,KAAI,CAACC,EAAOC,KACZjB,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACM,MAAI,EAACC,GAAI,GAAGpB,UAChBC,EAAAA,EAAAA,KAACoB,EAAAA,EAAS,CACRC,WAAS,EACTC,MAAON,EACJO,QAAQ,WAAY,OACpBA,QAAQ,MAAOC,GAAQA,EAAIC,gBAC9BtC,KAAM6B,EACNU,KACY,QAAVV,EACI,SACU,UAAVA,EACE,QACA,OAER5B,MAAOZ,EAASwC,GAChBW,SAAU1C,EACV2C,UAAqB,aAAVZ,EACXa,KAAgB,aAAVb,EAAuB,EAAI,EACjCc,UAAU,uBAlBUb,MAsB1BjB,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACM,MAAI,EAACC,GAAI,GAAGpB,UAChBC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CAACL,KAAK,SAASM,QAAQ,YAAYC,MAAM,UAAUZ,WAAS,EAAAtB,SAAC,iBAM1EJ,EAAAA,EAAAA,MAACuC,EAAAA,EAAM,CAAC5C,KAAMA,EAAM6C,QAASzC,EAAYK,SAAA,EACvCC,EAAAA,EAAAA,KAACoC,EAAAA,EAAW,CAAArC,SAAC,eACbC,EAAAA,EAAAA,KAACqC,EAAAA,EAAa,CAAAtC,UACZC,EAAAA,EAAAA,KAACsC,EAAAA,EAAiB,CAAAvC,SAAC,iEAIrBC,EAAAA,EAAAA,KAACuC,EAAAA,EAAa,CAAAxC,UACZC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CAACS,QAAS9C,EAAauC,MAAM,UAASlC,SAAC,cAKxC,C","sources":["pages/contact/Contact.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Button,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  TextField,\n} from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../../components/header/Header';\nimport './style/contact.css';\nimport { FormData } from '../../types';\n\nconst Contact = () => {\n  const [formData, setFormData] = useState<FormData>({\n    firstName: '',\n    lastName: '',\n    question: '',\n    age: '',\n    email: '',\n    phone: '',\n  });\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name as keyof FormData]: value });\n  };\n\n  const [open, setOpen] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (parseInt(formData.age) > 120) {\n      alert('Please enter an appropriate age.');\n      return;\n    }\n    window.location.href = `mailto:jayanta7.deb@gmail.com?subject=Contact Form Submission&body=${encodeURIComponent(\n      `First Name: ${formData.firstName}\\nLast Name: ${formData.lastName}\\nAge: ${formData.age}\\nEmail: ${formData.email}\\nPhone: ${formData.phone}\\nQuestion: ${formData.question}`,\n    )}`;\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    navigate('/');\n  };\n\n  return (\n    <Container maxWidth=\"sm\" id=\"contact\">\n      <Header text=\"Contact\" />\n      <form onSubmit={handleSubmit}>\n        <Grid container spacing={2}>\n          {(\n            [\n              'firstName',\n              'middleName',\n              'lastName',\n              'age',\n              'email',\n              'phone',\n              'question',\n            ] as (keyof FormData)[]\n          ).map((field, index) => (\n            <Grid item xs={12} key={index}>\n              <TextField\n                fullWidth\n                label={field\n                  .replace(/([A-Z])/g, ' $1')\n                  .replace(/^./, (str) => str.toUpperCase())}\n                name={field}\n                type={\n                  field === 'age'\n                    ? 'number'\n                    : field === 'email'\n                      ? 'email'\n                      : 'text'\n                }\n                value={formData[field]}\n                onChange={handleChange}\n                multiline={field === 'question'}\n                rows={field === 'question' ? 4 : 1}\n                className=\"custom-text-field\"\n              />\n            </Grid>\n          ))}\n          <Grid item xs={12}>\n            <Button type=\"submit\" variant=\"contained\" color=\"success\" fullWidth>\n              Send\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Thank You</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            It has opened the mail for you. Thanks for contacting us.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default Contact;\n"],"names":["Contact","formData","setFormData","useState","firstName","lastName","question","age","email","phone","handleChange","e","name","value","target","open","setOpen","navigate","useNavigate","handleClose","_jsxs","Container","maxWidth","id","children","_jsx","Header","text","onSubmit","preventDefault","parseInt","alert","window","location","href","concat","encodeURIComponent","Grid","container","spacing","map","field","index","item","xs","TextField","fullWidth","label","replace","str","toUpperCase","type","onChange","multiline","rows","className","Button","variant","color","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","onClick"],"sourceRoot":""}